class Solution {
public:
    int countBattleships(vector<vector<char>>& board){//only count the starting corner,4ms,97%
        if(board.size()==0)return 0;
        int row = board.size(),col = board[0].size();
        int ans = 0;
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
                if(board[i][j]=='X'&&(i==0||board[i-1][j]!='X')&&(j==0||board[i][j-1]!='X'))ans++;
        }
        return ans;
    }
    /*int countBattleships(vector<vector<char>>& board) {//4ms,97%
        if(board.size()==0)return 0;
        int row = board.size(),col = board[0].size();
        int ans = 0;
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(board[i][j]=='X')
                {
                    board[i][j]='1';
                    ans++;
                    if(j!=col-1&&board[i][j+1]=='X')
                    {
                        while(j!=col-1&&board[i][j+1]=='X')
                            board[i][++j]='1';
                    }
                    else if(i!=row-1&&board[i+1][j]=='X')
                    {
                        int k=i;
                        while(k!=row-1&&board[k+1][j]=='X')
                            board[++k][j]='1';
                    }
                }
            }
        }
        return ans;
    }*/
};
