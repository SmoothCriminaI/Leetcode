/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {//32ms,56%
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* q = l1,*p = l2;
        ListNode h(0),*pre = &h;
        pre ->next =NULL;
        int count = 0,tmp = 0;
        stack<int>s;
        while(q)
        {
            q = q->next;count++;
        }
        while(p)
        {
            p = p->next;count--;
        }
        if(count>0)
            while(count!=0)
            {
                s.push(l1->val);
                l1 = l1->next;
                count--;
            } 
        else
            while(count!=0)
            {
                s.push(l2->val);
                l2 = l2->next;
                count++;
            }
        while(l1)
        {
            s.push(l1->val+l2->val);
            l1 = l1->next;l2 = l2->next;
        }
        while(!s.empty())
        {
            tmp = tmp + s.top();
            s.pop();
            ListNode *cur = new ListNode(tmp%10);
            cur->next = pre->next;
            pre->next = cur;
            tmp/=10;
        }
        if(tmp!=0)
        {
            ListNode *cur = new ListNode(tmp%10);
            cur->next = pre->next;
            pre->next = cur;
        }
        return pre->next;
    }
};
