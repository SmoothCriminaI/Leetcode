class Solution {
public:
    int longestValidParentheses(string s) {//16ms,12%
        int size = s.size(),ma = 0;
        if(size<2)return 0;
        vector<int>dp(size+1,0);
        for(int i=1;i<size;i++)
        {
            if(s[i]=='(')
                continue;
            else
            {
                if(i-dp[i]-1>=0&&s[i-dp[i]-1]=='(')
                {
                    dp[i+1] = dp[i-dp[i]-1]+dp[i]+2;
                }
            }
            ma = max(ma,dp[i+1]);
        }
        return ma;
    }
    /*int longestValidParentheses(string s) {//12ms,20%
        int ans = 0;
        stack<int>st;
        st.push(-1);
        for(int i=0;i<s.size();i++)
        {
            int tmp = st.top();
            if(tmp!=-1&&s[i]==')'&&s[tmp]=='(')
            {
                st.pop();
                ans = max(ans,i-st.top());            
            }
            else
                st.push(i);
        }
        return ans;
    }*/
};
