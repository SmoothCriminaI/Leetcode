class Solution {//12ms,92%
public:
    int numIslands(vector<vector<char>>& grid) {
        if(grid.empty())return 0;
        int row =grid.size(),col = grid[0].size(),ans=0,flag=0;
        vector<vector<int>>num(row,vector<int>(col,0));
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(grid[i][j]=='1'&&num[i][j]==0)
                {
                    ans++;
                    dfs(grid,num,i,j,ans);
                }
            }
        }
        return ans;
    }
    void dfs(vector<vector<char>>& grid,vector<vector<int>> &num,int i,int j,int ans)
    {
        //cout<<i<<j<<endl;
        int row = grid.size(),col = grid[0].size();
        num[i][j]=ans;
        if(i!=0&&grid[i-1][j]=='1'&&num[i-1][j]==0)dfs(grid,num,i-1,j,ans);
        if(i!=row-1&&grid[i+1][j]=='1'&&num[i+1][j]==0)dfs(grid,num,i+1,j,ans);
        if(j!=0&&grid[i][j-1]=='1'&&num[i][j-1]==0)dfs(grid,num,i,j-1,ans);
        if(j!=col-1&&grid[i][j+1]=='1'&&num[i][j+1]==0)dfs(grid,num,i,j+1,ans);
        return;
    }
};
