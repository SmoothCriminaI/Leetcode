/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/
class Solution {//12ms,90%
public:
    Node* connect(Node* root) {
        Node*head = root,*nextHead,*nextTail;
        while(head)
        {
            nextTail = head;
            while(head->next&&!head->left&&!head->right)
            {
                head = head->next;
            }
            if(head->left)nextHead=head->left;
            else if(head->right)nextHead=head->right;
            else
                break;
            head = nextTail;nextTail=new Node(0);
            while(head)
            {
                if(head->left!=NULL)
                {
                    nextTail->next=head->left;
                    nextTail=nextTail->next;
                }
                if(head->right!=NULL)
                {
                    nextTail->next=head->right;
                    nextTail=nextTail->next;
                }
                head = head->next;
            }
            head = nextHead;
        }  
        return root;
    }
};
