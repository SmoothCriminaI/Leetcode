/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {//28ms,71%
public:
    int findTilt(TreeNode* root) {
        int ans = 0;
        if(!root)
            return ans;
        help(root,ans);
        return ans;
    }
    
    TreeNode* help(TreeNode* root,int &ans)
    {
        if(!root)
            return NULL;
        TreeNode* left = help(root->left,ans);
        TreeNode* right = help(root->right,ans);
        int left_val = left? left->val:0;
        int right_val = right? right->val:0;
        ans += abs(left_val-right_val);
        root->val += left_val + right_val;
        return root;
    }
};
