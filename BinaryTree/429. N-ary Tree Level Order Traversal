/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {//44ms,87%
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>>ans;
        if(!root)return ans;
        queue<Node*>q;
        vector<int> res;
        q.push(root);
        while(!q.empty())
        {
            int size = q.size();
            res.clear();
            for(int i=0;i<size;i++)
            {
                Node*tmp = q.front();
                q.pop();
                res.push_back(tmp->val);
                if(!tmp->children.empty())
                {
                    for(int j=0;j<tmp->children.size();j++)
                        q.push(tmp->children[j]);
                }
            }
            ans.push_back(res);
        }
        return ans;
    }
};
