class Solution {//16ms,99.9%
public:
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        vector<vector<int>> ans;
        int flag=0;
        sort(nums.begin(),nums.end());
        while(!flag)
        {
            ans.push_back(nums);
            flag = nextPermutation(nums);
        }
        return ans;
    }
    int nextPermutation(vector<int>& nums) {
        if(nums.size()==0||nums.size()==1)
            return 1;
        for(int i=nums.size()-1;i>=1;i--)
        {
            if(nums[i]>nums[i-1])
            {
                int min = nums[i];
                int index = i;
                for(int j=i+1;j<nums.size();j++)
                {
                    if(nums[j]<min&&nums[j]>nums[i-1])
                    {
                        min=nums[j];
                        index = j;
                    }   
                }
                swap(nums[i-1],nums[index]);
                sort(nums.begin()+i,nums.end());
                return 0;
            }
        }
        return 1;
    }
};
