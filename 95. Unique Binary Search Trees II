/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {//20ms,87%
public:
    vector<TreeNode*> generateTrees(int n) {
        vector<TreeNode*> ans;
        if(n==0) return ans;
        ans = gen(1,n);
        return ans;
    }
    vector<TreeNode*> gen(int s,int e)
    {   
        vector<TreeNode*> ans;
        if(s>e)
        {
            TreeNode* root = NULL;
            ans.push_back(root);
            return ans;
        }
        for(int i=s;i<=e;i++)
        {
            vector<TreeNode*> left = gen(s,i-1);
            vector<TreeNode*> right = gen(i+1,e);
            for(TreeNode* le : left)
            {
                for(TreeNode* ri : right)
                {
                    TreeNode* root = new TreeNode(i);
                    root->left = le;
                    root->right = ri;
                    ans.push_back(root);
                }
            }
        }
        return ans;
    }
};
