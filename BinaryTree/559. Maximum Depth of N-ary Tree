/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    // int maxDepth(Node* root) {//iter,63%
    //     if(!root)return 0;
    //     queue<Node*>q;
    //     q.push(root);
    //     int depth = 0;
    //     while(!q.empty())
    //     {
    //         int size = q.size();
    //         depth++;
    //         for(int i=0;i<size;i++)
    //         {
    //             Node* tmp = q.front();
    //             q.pop();
    //             for(auto it = tmp->children.begin();it!= tmp->children.end();it++)
    //                 q.push(*it);
    //         }
    //     }
    //     return depth;
    // }
    int maxDepth(Node* root){//recursive,89%
        if(!root)return 0;
        int ans = 1;
        for(auto it = root->children.begin();it!= root->children.end();it++)
            ans = max(ans,maxDepth(*it)+1);
        return ans;
    }
};
