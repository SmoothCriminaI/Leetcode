class Solution {//8ms,99%
public:
    int evalRPN(vector<string>& tokens) {
        stack<int>num;
        for(int i=0;i<tokens.size();i++)
        {
            string s = tokens[i];
            if(isdigit(s[0])||(s[0]=='-'&&s.size()>1))
            {
                int tmp = 0,neg=0;
                if(s[0]=='-')
                {
                    neg = 1;
                    s[0] = '0';
                }
                for(int j=0;j<s.size();j++)
                {
                    tmp=tmp*10 + (s[j]-'0');
                }
                neg == 1? num.push(-tmp):num.push(tmp);
            } 
            else
            {
                int a = num.top();num.pop();
                int b = num.top();num.pop();
                switch(s[0])
                {
                    case '+':
                        num.push(a+b);
                        break;
                    case '-':
                        num.push(b-a);
                        break;
                    case '*':
                        num.push(a*b);
                        break;
                    case '/':
                        num.push(b/a);
                        break;
                }
            }
        }
        return num.top();
        /*unordered_map<string, function<int (int, int) > > map = {//Amazing!!
            { "+" , [] (int a, int b) { return a + b; } },
            { "-" , [] (int a, int b) { return a - b; } },
            { "*" , [] (int a, int b) { return a * b; } },
            { "/" , [] (int a, int b) { return a / b; } }
        };*/
    }
};
