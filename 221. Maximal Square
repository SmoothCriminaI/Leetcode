class Solution {//20ms,77%
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        if(matrix.empty())return 0;
        int ma=0,row = matrix.size(),col = matrix[0].size();
        int dp[row][col];
        for(int i=0;i<col;i++)
        {
            if(matrix[0][i]=='1')
            {
                dp[0][i]=1;   
                if(!ma)ma=1;
            }
            else
                dp[0][i]=0;
        }

        for(int i=0;i<row;i++)
        {
            if(matrix[i][0]=='1')
            {
                dp[i][0]=1;  
                if(!ma)ma=1;
            }        
            else
                dp[i][0]=0;
        }
        for(int i=1;i<row;i++)
        {
            for(int j=1;j<col;j++)
            {
                if(matrix[i][j]=='1')
                {
                    dp[i][j]=min(dp[i-1][j],min(dp[i][j-1],dp[i-1][j-1]))+1;
                    if(dp[i][j]>ma)ma=dp[i][j];
                }
                else
                    dp[i][j]=0;
            }
        }
        return ma*ma;
    }
};
