class Solution {
public:
    int coinChange(vector<int>& coins, int amount) {//combination,76ms,26%
        if(coins.empty())return -1;
        int size=coins.size();
        vector<int>dp(amount+1,-1);
        dp[0]=0;
        for(int i=0;i<size;i++)
        {
            for(int j=coins[i];j<=amount;j++)
            {
                if(dp[j-coins[i]]!=-1)
                    dp[j]=dp[j]>0?min(dp[j],dp[j-coins[i]]+1):dp[j-coins[i]]+1;
            }
        }
        return dp[amount]==amount+1? -1 : dp[amount];
    }
    /*int coinChange(vector<int>& coins, int amount) {//pertumation,96ms,18%
        if(coins.empty())return -1;
        int size=coins.size();
        sort(coins.begin(),coins.end());
        vector<int>dp(amount+1,amount+1);
        dp[0]=0;
        for(int i=1;i<=amount;i++)
        {
            for(int j=0;j<size;j++)
            {
                if(coins[j]<=i)
                    dp[i]=min(dp[i],dp[i-coins[j]]+1);
                else
                    break;
            }
        }
        return dp[amount]==amount+1? -1 : dp[amount];
    }*/
};
