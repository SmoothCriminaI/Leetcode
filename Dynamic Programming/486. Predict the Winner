class Solution {//0ms,100%,O(n) space
public:
    bool PredictTheWinner(vector<int>& nums) {
        int size = nums.size();
        vector<int>dp(size,0);
        for(int i=size-1;i>=0;i--)
        {
            for(int j=i;j<size;j++)
            {
                if(j==i)
                    dp[i] = nums[i];
                else
                {
                    dp[j] = max(nums[i]-dp[j],nums[j]-dp[j-1]);
                }
            }
        }
        return dp[size-1]>=0;
    }
};
/*class Solution {//0ms,100%,O(n^2) space
public:
    bool PredictTheWinner(vector<int>& nums) {
        int size = nums.size();
        vector<vector<int>>dp(size,vector<int>(size,0));
        for(int i=0;i<size;i++)
        {
            dp[i][i] = nums[i];
        }
        for(int len=1;len<size;len++)
        {
            for(int i=0;i<size-len;i++)
            {
                dp[i][i+len] = max(nums[i]-dp[i+1][i+len],nums[i+len]-dp[i][i+len-1]);
            }
        }
        return dp[0][size-1]>=0;
    }
};*/
