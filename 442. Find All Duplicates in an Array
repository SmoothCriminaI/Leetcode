class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        vector<int> res;
        int i = 0;
        while (i < nums.size()) {
            if (nums[i] != nums[nums[i]-1]) swap(nums[i], nums[nums[i]-1]);
            else i++;
        }
        for (i = 0; i < nums.size(); i++) {
            if (nums[i] != i + 1) res.push_back(nums[i]);
        }
        return res;
    }
   /* vector<int> findDuplicates(vector<int>& nums) {//252ms,5%
        vector<int>ans;
        for(int i=0;i<nums.size();i++)
        {
            nums[abs(nums[i])-1]=-nums[abs(nums[i])-1];
            if(nums[abs(nums[i])-1]>0)
                ans.push_back(abs(nums[i]));
        }
        return ans;
    }*/
    /*vector<int> findDuplicates(vector<int>& nums) {//120ms,39%
        vector<int>ans(nums.size(),0);
        int num=0;
        for(int i=0;i<nums.size();i++)
        {
            ans[nums[i]-1]++;
        }
        for(int i=0;i<nums.size();i++)
        {
            if(ans[i]>1)
                ans[num++]=i+1;
        }
        ans.erase(ans.begin()+num,ans.end());
        return ans;
    }*/
};
