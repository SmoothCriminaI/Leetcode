class Solution {//76ms,51%
public:
    int row,col;
    bool exist(vector<vector<char>>& board, string word) {
        if(board.empty())return false;
        row = board.size(),col = board[0].size();
        if(word.size()>row*col)return false;
        for(int i =0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(board[i][j]==word[0])
                {
                    if(DFS(word,0,board,i,j))
                        return true;                    
                }

            }
        }
        return false;
    }
    bool DFS(string word,int start,vector<vector<char>>& board,int i,int j)
    {
        char tmp = board[i][j];
        board[i][j]='.';
        if(start==word.size()-1)return true;
        if(i+1<row&&board[i+1][j]==word[start+1]&&board[i+1][j]!='.')
            if(DFS(word,start+1,board,i+1,j))
                return true;
        if(i-1>=0&&board[i-1][j]==word[start+1]&&board[i-1][j]!='.')
            if(DFS(word,start+1,board,i-1,j))
                return true;;
        if(j+1<col&&board[i][j+1]==word[start+1]&&board[i][j+1]!='.')
            if(DFS(word,start+1,board,i,j+1))
                return true;
        if(j-1>=0&&board[i][j-1]==word[start+1]&&board[i][j-1]!='.')
            if(DFS(word,start+1,board,i,j-1))
                return true;
        board[i][j]=tmp;
        return false;
    }
};
