/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int rob(TreeNode* root){//12ms,93%,18.3mb,100%
        int l,r;
        return robsub(root,l,r);
    }
    int robsub(TreeNode* root,int &l,int &r)
    {
        if(!root)return 0;
        int ll=0,lr=0,rl=0,rr=0;
        l = robsub(root->left,ll,lr);
        r = robsub(root->right,rl,rr);
        
        return max(root->val+ll+lr+rl+rr,l+r);
    }
    /*int rob(TreeNode* root) {//24ms,42%
        vector<int>res = robsub(root);
        
        return max(res[0],res[1]);
    }
    vector<int>robsub(TreeNode* root)
    {
        if(!root)
            return vector<int>(2,0);
        vector<int>left = robsub(root->left);
        vector<int>right= robsub(root->right);
        
        vector<int>res(2);
        res[0]=max(left[0],left[1])+max(right[0],right[1]);
        res[1]=root->val+left[0]+right[0];
        
        return res;
    }*/
};
