class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {//32ms,91%
        int size = nums.size();
        vector<int>mi(size);
        vector<int>ma(size);
        for(int i=0,ml = INT_MIN;i<size;i++)
        {
            ma[i] = ml = max(ml,nums[i]);    
        }
        for(int i=size-1,mr = INT_MAX;i>=0;i--)
        {
            mi[i] = mr = min(mr,nums[i]);    
        }
        int i = 0,j = size-1;
        while(i<=j&&nums[i]==mi[i])i++;
        while(i<j&&nums[j]==ma[j])j--;
        return j-i+1;
    }
    /*int findUnsortedSubarray(vector<int>& nums) {//68ms,25%
        vector<int>s(nums.begin(),nums.end());
        sort(s.begin(),s.end());
        if(s==nums)return 0;
        int i = 0,j = nums.size()-1;
        while(i<j&&nums[i]==s[i])i++;
        while(i<j&&nums[j]==s[j])j--;
        return j-i+1;
    }*/
};
